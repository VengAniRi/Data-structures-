print("–ó–∞–¥–∞—á–∞ 1.", "‚ú£" * 50)

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å math.
import math

# –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –≤–≤–æ–¥ –∑–Ω–∞—á–µ–Ω–∏—è —Ä–∞–¥–∏—É—Å–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏.
definition_radius = int(input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä —Ä–∞–¥–∏—É—Å–∞: "))

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é circle_area(), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –∞—Ä–≥—É–º–µ–Ω—Ç, –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º—ã –≤—ã—á–∏—Å–ª—è–µ–º –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞
# —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ math.pi –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Å—Ç–µ–ø–µ–Ω—å **.
# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç f-—Å—Ç—Ä–æ–∫–∏ –∏ –æ–∫—Ä—É–≥–ª—è–µ–º –¥–æ –¥–≤—É—Ö –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π.
def circle_area(radius):
    area = math.pi * radius ** 2
    print(f"–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ —Ä–∞–¥–∏—É—Å–∞: {radius}, —Ä–∞–≤–Ω–∞ - {round(area, 2)} –∫–≤.–µ–¥.")

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é.
circle_area(definition_radius)

print()
print("–ó–∞–¥–∞—á–∞ 2.", "‚ú£" * 50)

# –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é —Å –¥–≤—É–º—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏. –í —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–∏—Ç –ø–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è: –µ—Å–ª–∏ n —Ä–∞–≤–Ω–æ None,
# —Ç–æ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ sum() –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Å—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ lst –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é sum_lst.
# –ó–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ sum_lst.
# –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ n –Ω–µ —Ä–∞–≤–Ω–æ None, —Ç–æ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ sum() –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è —Å—É–º–º–∞ –ø–µ—Ä–≤—ã—Ö n —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ lst (—Å—Ä–µ–∑ —Å–ø–∏—Å–∫–∞ lst[:n])
# –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é sum_lst. –ó–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ , –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö n —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ lst,
# –∏ –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ sum_lst.
def sum_elements(lst, n=None):
    if n == None:
        sum_lst = sum(lst)
        print(f"–°—É–º–º–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–ø–∏—Å–∫–∞ —Ä–∞–≤–Ω–∞ {sum_lst}.")
    else:
        sum_lst = sum(lst[:n])
        print(f"–°—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ {', '.join(map(str, lst[:n]))} —Ä–∞–≤–Ω–∞ {sum_lst}.")

list_example = range(-10, 10)
n = 2
sum_elements(list_example, 2)
sum_elements(list_example)

print()
print("–ó–∞–¥–∞—á–∞ 3.", "‚ú£" * 50)

print("–î–∞–ª–µ–µ –ø–æ–∑–≤–æ–ª—é —Å–µ–±–µ –Ω–µ —Ä–∞—Å–ø–∏—Å—ã–≤–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ –∞–ª–≥–æ—Ä–∏—Ç–º —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á, —Ç–∞–∫ –∫–∞–∫ –±—É–¥–µ—Ç –∑–∞–Ω–∏–º–∞—Ç—å –≤—Ä–µ–º—è,\n–∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã —É–¥–µ–ª–∏—Ç—å –Ω–∞ –∏–∑—É—á–µ–Ω–∏–µ Pandas üôèüòä")
print()

def mean(lst):
    sum_lst = 0
    for i in lst:
        sum_lst += i
    mean_value = sum_lst / len(lst)
    print(f"–í—ã–±–æ—Ä–æ—á–Ω–æ–µ —Å—Ä–µ–¥–Ω–µ–µ: {mean_value}.")

def median(lst):
    sorted_lst = sorted(lst)
    n = len(sorted_lst)
    if n % 2 == 0:
        median_value = (sorted_lst[n//2-1] + sorted_lst[n//2]) / 2
    else:
        median_value = sorted_lst[n//2]
    print(f"–ú–µ–¥–∏–∞–Ω–∞: {median_value}.")

def mode(lst):
    count_dict = {}
    for i in lst:
        if i not in count_dict:
            count_dict[i] = 1
        else:
            count_dict[i] += 1
    max_count = max(count_dict.values())
    mode_value = [k for k, v in count_dict.items() if v == max_count]
    print(f"–ù–∞–∏–±–æ–ª–µ–µ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {', '.join(map(str, mode_value))}.")


value = [12, 13, 2, 4, 13, 5, 6, 7, 8, 8, 8, 8, 8, 10]
mean(value)
median(value)
mode(value)


print()
print("–ó–∞–¥–∞—á–∞ 4.", "‚ú£" * 50)

print("–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ—Ä—Ç–µ–∂–∞.")

def income(*args):
    total_income = sum(args)
    print(f"–û–±—â–∏–π –¥–æ—Ö–æ–¥: {total_income}.")

income(100)
income(100, 10)
income(200, 300, 400)

print("–†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å–ª–æ–≤–∞—Ä—è.")

def income(**kwargs):
    total_income = sum(kwargs.values())
    print(f"–û–±—â–∏–π –¥–æ—Ö–æ–¥: {total_income}.")

income(salary=100, deposits=50, dividends=20, benefits=5)
income(salary=200, benefits=10)
income(deposits=500)
